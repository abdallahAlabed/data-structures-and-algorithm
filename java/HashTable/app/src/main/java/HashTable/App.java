/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package HashTable;

public class App {

    public static void main(String[] args) {
          HashmapTreeIntersection hashmapTreeIntersection= new HashmapTreeIntersection();
//        hashmapTreeIntersection.add(1,"s");
//        hashmapTreeIntersection.add(2,"s");
//        hashmapTreeIntersection.add(3,"s");
//        hashmapTreeIntersection.contains("s");
          HashTable hashTable = new HashTable();
//        hashTable.add("Once", "Once");
//        hashTable.add("Once", "Once");
//        System.out.println(hashTable.contains("Once"));
//        System.out.println(hashTable.get("key"));
//        System.out.println(hashTable.contains("key"));
//          hashTable.repeatedWord("Once upon a time, there was a brave princess who...");
//          System.out.println(hashTable);

        BinaryTree<Integer> binaryTreeOne = new BinaryTree<Integer>(new TreeNode<Integer>(1));
        TreeNode<Integer> node1 = new TreeNode<Integer>(2);
        TreeNode<Integer> node2 = new TreeNode<Integer>(3);
        TreeNode<Integer> node3 = new TreeNode<Integer>(4, node1, node2);
        TreeNode<Integer> node5 = new TreeNode<Integer>(5);
        TreeNode<Integer> node4 = new TreeNode<Integer>(6, node5, null);
        binaryTreeOne.root.right = node4;
        binaryTreeOne.root.left = node3;

        BinaryTree<Integer> binaryTreeTwo = new BinaryTree<Integer>(new TreeNode<Integer>(4));
        TreeNode<Integer> node6 = new TreeNode<Integer>(5);
        TreeNode<Integer> node7 = new TreeNode<Integer>(6);
        TreeNode<Integer> node8 = new TreeNode<Integer>(7, node6, node7);
        TreeNode<Integer> node9 = new TreeNode<Integer>(8);
        TreeNode<Integer> node10 = new TreeNode<Integer>(9, node9, null);
        binaryTreeTwo.root.right = node10;
        binaryTreeTwo.root.left = node8;

        System.out.println(hashTable.treeIntersection(binaryTreeOne, binaryTreeTwo));
    }
}
