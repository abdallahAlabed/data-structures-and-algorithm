/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Graph;

import java.util.HashSet;

public class App <T>{


    public static void main(String[] args) {
        Graph graph =new Graph();
        graph.addNode("a");
        graph.addNode("b");
        graph.addNode("c");
        graph.addNode("d");
        graph.addNode("e");
        graph.addNode("f");

        graph.addEdge(1,0,0);
        graph.addEdge(0,1,1);
        graph.addEdge(1,3,2);
        graph.addEdge(1,2,3);
        graph.addEdge(2,1,4);
        graph.addEdge(2,4,5);
        graph.addEdge(3,5,6);
        graph.addEdge(4,2,7);
        graph.addEdge(4,3,8);
        graph.addEdge(5,3,9);
//        Node n0 = new Node(0);
//        Node n1 = new Node(1);
//        Node n2 = new Node(2);
//        Node n3 = new Node(3);
//        Node n4 = new Node(4);
//        Node n5 = new Node(5);
//      n0.addEdge(n1);
//        n1.addEdge(n0);
//        n1.addEdge(n3);
//        n1.addEdge(n2);
//        n2.addEdge(n1);
//        n2.addEdge(n4);
//        n3.addEdge(n1);
//        n3.addEdge(n4);
//        n3.addEdge(n5);
//        n4.addEdge(n2);
//        n4.addEdge(n3);
//        n5.addEdge(n3);
        System.out.println("BFS Iterative:");
        System.out.println(graph.bfs(graph.allNodes.get(0)).toString());
        System.out.println();
        System.out.println("DFS Iterative:");
        System.out.println(graph.dfsIterative(graph.allNodes.get(0)).toString());
        System.out.println();
        System.out.println("DFS Recursive:");
        System.out.println(graph.dfsRecursive(graph.allNodes.get(0), new HashSet<String>()).toString());
        System.out.println();
        System.out.println("siz");
        System.out.println(graph.siz());
        System.out.println(graph.getNeighbors(1));
        System.out.println(graph.getNodes().get(1).value);

    }

}

